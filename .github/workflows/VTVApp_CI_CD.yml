name: VTVApp (.NET 7 & React) CI/CD

on:
  push:
    branches:
      - main

env:
  DOTNET_VERSION: 7.0.x
  API_PROJECT_PATH: VTVApp.Api/VTVApp.Api.csproj
  UNIT_TEST_PATH: VTVApp.UnitTests/VTVApp.UnitTests.csproj
  SPEC_TEST_PATH: VTVApp.SpecflowTests/VTVApp.SpecflowTests.csproj
  IMAGE_NAME_API: felwitcher/vtv-app-api
  IMAGE_NAME_WEB: felwitcher/vtv-app-web
  AZURE_WEBAPP_NAME_API: vtvapp-api
  AZURE_WEBAPP_NAME_WEB: vtvapp-web

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - run: dotnet restore ${{ env.API_PROJECT_PATH }}
      - run: dotnet build ${{ env.API_PROJECT_PATH }} --no-restore
      - run: dotnet test ${{ env.UNIT_TEST_PATH }}
      - run: dotnet test ${{ env.SPEC_TEST_PATH }}

  docker-images:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push API Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME_API }} -f VTVApp.Api/Dockerfile .
          docker push ${{ env.IMAGE_NAME_API }}

      - name: Set up .env for vtv-app-web
        run: |
          echo "VITE_API_URL=http://vtv-app-api" > ./VTVApp.Web/.env

      - name: Build and Push Web Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME_WEB }} ./VTVApp.Web
          docker push ${{ env.IMAGE_NAME_WEB }}

  deploy-api:
    runs-on: ubuntu-latest
    needs: docker-images
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - run: dotnet restore ${{ env.API_PROJECT_PATH }}
      - run: dotnet publish ${{ env.API_PROJECT_PATH }} -c Release -o ./publish
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_API }}
          package: ./publish
      - uses: Azure/cli@v1
        with:
          inlineScript: az webapp config connection-string set --name ${{ env.AZURE_WEBAPP_NAME_API }} --resource-group VTVApp_RG --connection-string-type SQLAzure --settings DefaultConnection='${{ secrets.AZURE_SQL_CONNECTION_STRING }}'

  build-and-deploy-web:
      runs-on: ubuntu-latest
      needs: docker-images
      steps:
        - uses: actions/checkout@v4
  
        - name: Setup Node.js environment
          uses: actions/setup-node@v3
          with:
            node-version: "20"
  
        - name: Install Dependencies
          run: npm install
          working-directory: ./VTVApp.Web
  
        - name: Setup Environment Variables
          run:  |
            cat ./VTVApp.Web/.env
            sed -i '/^VITE_API_URL=/c\VITE_API_URL="https://vtvapp-api.azurewebsites.net"' .env
            cat ./VTVApp.Web/.env
  
        - name: Build Web App
          run: npm run build
          working-directory: ./VTVApp.Web
  
        - name: Deploy to Azure App Service
          uses: azure/webapps-deploy@v2
          with:
            app-name: ${{ env.AZURE_WEBAPP_NAME_WEB }}
            publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
            package: ./VTVApp.Web/dist

  deploy-to-container-apps:
    runs-on: ubuntu-latest
    needs: docker-images
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Docker Compose to Azure App Service
        run: |
          az webapp deploy --name vtvapp-container --resource-group VTVApp_RG --src-path ./docker-compose.yml --type compose

      - name: Set Environment Variables for API
        run: |
          az webapp config appsettings set --name vtvapp-container --resource-group VTVApp_RG --settings ConnectionStrings__DefaultConnection=${{ secrets.AZURE_SQL_CONNECTION_STRING }} Cors__AllowedOrigins__0=http://vtv-app-web
